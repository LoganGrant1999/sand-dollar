{
  "permissions": {
    "allow": [
      "Bash(SPRING_PROFILES_ACTIVE=plaid,local mvn spring-boot:run -Dmaven.test.skip=true -Dspring-boot.run.arguments=\"--server.port=8080 --spring.profiles.active=plaid,local\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"DROP SCHEMA public CASCADE; CREATE SCHEMA public;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nTRUNCATE TABLE transactions CASCADE;\nTRUNCATE TABLE accounts CASCADE;\nTRUNCATE TABLE plaid_items CASCADE;\nTRUNCATE TABLE refresh_tokens CASCADE;\nTRUNCATE TABLE users CASCADE;\")",
      "Bash(mvn:*)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"TRUNCATE TABLE transactions CASCADE; TRUNCATE TABLE accounts CASCADE; TRUNCATE TABLE plaid_items CASCADE; TRUNCATE TABLE refresh_tokens CASCADE; TRUNCATE TABLE users CASCADE;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT COUNT(*) as user_count FROM users; SELECT COUNT(*) as plaid_items_count FROM plaid_items; SELECT COUNT(*) as accounts_count FROM accounts;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT COUNT(*) as user_count FROM users;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT COUNT(*) as plaid_items_count FROM plaid_items;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT email, id FROM users;\")",
      "Bash(ngrok:*)",
      "Bash(VITE_USE_NGROK=true npm run dev)",
      "Bash(curl:*)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT email, id FROM users LIMIT 5;\")",
      "Bash(time curl:*)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT COUNT(*) as transaction_count FROM transactions WHERE EXISTS (SELECT 1 FROM accounts WHERE accounts.id = transactions.account_id AND accounts.user_id = 1);\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nSELECT \n  category_top, \n  COUNT(*) as transaction_count,\n  ROUND(SUM(ABS(amount_cents)) / 100.0, 2) as total_amount\nFROM transactions t \nJOIN accounts a ON t.account_id = a.id \nWHERE a.user_id = 1 AND t.amount_cents < 0\nGROUP BY category_top \nORDER BY total_amount DESC;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nSELECT \n  name,\n  category_top,\n  amount_cents / 100.0 as amount_dollars\nFROM transactions t \nJOIN accounts a ON t.account_id = a.id \nWHERE a.user_id = 1 AND t.amount_cents < 0\nLIMIT 20;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nSELECT \n  t.name,\n  t.category_top,\n  t.amount_cents / 100.0 as amount_dollars\nFROM transactions t \nJOIN accounts a ON t.account_id = a.id \nWHERE a.user_id = 1 AND t.amount_cents < 0\nLIMIT 20;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nUPDATE transactions SET \n    category_top = CASE \n        WHEN name LIKE ''%HULU%'' OR name LIKE ''%PRIME VIDEO%'' OR name LIKE ''%ESPN%'' THEN ''Entertainment''\n        WHEN name LIKE ''%CVS%'' THEN ''Healthcare'' \n        WHEN name LIKE ''%Walmart%'' THEN ''Groceries''\n        WHEN name LIKE ''%BRIGHAM YOUNG%'' OR name LIKE ''%ZYBOOK%'' THEN ''Education''\n        WHEN name LIKE ''%OPENAI%'' OR name LIKE ''%CLAUDE%'' OR name LIKE ''%NGROK%'' THEN ''Software''\n        WHEN name LIKE ''%Uber Eats%'' THEN ''Dining''\n        WHEN name LIKE ''%Amazon Prime%'' THEN ''Subscriptions''\n        WHEN name LIKE ''%AMAZON MKTPL%'' THEN ''Shopping''\n        WHEN name LIKE ''%MTA*NYCT%'' THEN ''Transport''\n        ELSE category_top \n    END\nWHERE EXISTS (SELECT 1 FROM accounts WHERE accounts.id = transactions.account_id AND accounts.user_id = 1);\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\nSELECT DISTINCT \n  t.name,\n  t.category_top,\n  t.category_sub\nFROM transactions t \nJOIN accounts a ON t.account_id = a.id \nWHERE a.user_id = 1 AND t.amount_cents < 0\nORDER BY t.name\nLIMIT 20;\")",
      "Bash(lsof:*)"
    ],
    "deny": [],
    "ask": []
  }
}