{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm create:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(node_modules/.bin/tailwindcss:*)",
      "Bash(find:*)",
      "Read(//Users/logangrant/Desktop/strat/**)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run dev:*)",
      "Bash(mvn:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Bash(java:*)",
      "Bash(brew install:*)",
      "Bash(export:*)",
      "Bash(JAVA_HOME=/opt/homebrew/opt/openjdk@21 mvn spring-boot:run)",
      "Bash(brew services start:*)",
      "Bash(createdb:*)",
      "Bash(psql:*)",
      "Bash(xxd:*)",
      "Bash(xmllint:*)",
      "Bash(docker:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(JAVA_HOME=/opt/homebrew/opt/openjdk@21 mvn spring-boot:run -Dspring-boot.run.arguments=seed)",
      "Bash(JAVA_HOME=/opt/homebrew/opt/openjdk@21 mvn -f backend/pom.xml spring-boot:run)",
      "Bash(set -a)",
      "Bash(source .env)",
      "Bash(set +a)",
      "Bash(kill:*)",
      "Bash(brew services:*)",
      "Bash(JAVA_HOME=/opt/homebrew/opt/openjdk@21 mvn -f backend/pom.xml spring-boot:run -Dspring-boot.run.arguments=seed)",
      "Bash(JAVA_HOME=/opt/homebrew/opt/openjdk@21 SPRING_PROFILES_ACTIVE=dev,mock mvn spring-boot:run)",
      "Bash(cat:*)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn spring-boot:run)",
      "Read(//Users/logangrant/.m2/repository/**)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn -f backend/pom.xml spring-boot:run)",
      "Bash(jar tf:*)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn -f backend/pom.xml compile)",
      "Bash(xargs kill:*)",
      "Bash(awk:*)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn compile)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn -f backend/pom.xml spring-boot:run -DskipTests)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn clean compile spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=local mvn spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=mock mvn -f backend/pom.xml spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=local mvn -f backend/pom.xml spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT id, email, password_hash FROM users WHERE email = ''ai.demo@sanddollar.local'';\")",
      "Bash(python3:*)",
      "Bash(SPRING_PROFILES_ACTIVE=plaid mvn spring-boot:run -Dmaven.test.skip=true)",
      "Bash(SPRING_PROFILES_ACTIVE=plaid mvn -f backend/pom.xml spring-boot:run -Dmaven.test.skip=true)",
      "Bash(pg_isready:*)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT version_rank, installed_rank, version, description, script FROM flyway_schema_history ORDER BY version_rank;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"SELECT installed_rank, version, description, script FROM flyway_schema_history ORDER BY installed_rank;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"INSERT INTO flyway_schema_history (installed_rank, version, description, type, script, checksum, installed_by, execution_time, success) VALUES (8, ''8'', ''Add plaid sync fields'', ''SQL'', ''V8__Add_plaid_sync_fields.sql'', 0, ''sand_dollar_user'', 100, true);\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -f /Users/logangrant/Desktop/strat/sand-dollar/backend/src/main/resources/db/migration/V8__Add_plaid_sync_fields.sql)",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"\\dt\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"DELETE FROM flyway_schema_history WHERE version = ''8'';\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d postgres -c \"DROP DATABASE sand_dollar;\")",
      "Bash(SPRING_PROFILES_ACTIVE=local psql -h localhost -U sand_dollar_user -d sand_dollar -c \"TRUNCATE flyway_schema_history;\")",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx tsc:*)"
    ],
    "deny": [],
    "ask": []
  }
}